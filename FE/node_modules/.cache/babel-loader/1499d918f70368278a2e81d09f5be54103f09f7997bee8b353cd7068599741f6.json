{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Async thunks\nexport const createCompany = createAsyncThunk('company/create', async (companyData, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/company`, companyData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getCompany = createAsyncThunk('company/get', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/company`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updateCompany = createAsyncThunk('company/update', async (companyData, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.put(`${API_URL}/company`, companyData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getAllCompanies = createAsyncThunk('company/getAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/company/all`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  company: null,\n  companies: [],\n  loading: false,\n  error: null\n};\nconst companySlice = createSlice({\n  name: 'company',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearCompany: state => {\n      state.company = null;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Create Company\n    .addCase(createCompany.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createCompany.fulfilled, (state, action) => {\n      state.loading = false;\n      state.company = action.payload;\n    }).addCase(createCompany.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Failed to create company';\n    })\n    // Get Company\n    .addCase(getCompany.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getCompany.fulfilled, (state, action) => {\n      state.loading = false;\n      state.company = action.payload;\n    }).addCase(getCompany.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message) || 'Failed to get company';\n    })\n    // Update Company\n    .addCase(updateCompany.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateCompany.fulfilled, (state, action) => {\n      state.loading = false;\n      state.company = action.payload;\n    }).addCase(updateCompany.rejected, (state, action) => {\n      var _action$payload3;\n      state.loading = false;\n      state.error = ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.message) || 'Failed to update company';\n    })\n    // Get All Companies\n    .addCase(getAllCompanies.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getAllCompanies.fulfilled, (state, action) => {\n      state.loading = false;\n      state.companies = action.payload;\n    }).addCase(getAllCompanies.rejected, (state, action) => {\n      var _action$payload4;\n      state.loading = false;\n      state.error = ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.message) || 'Failed to get companies';\n    });\n  }\n});\nexport const {\n  clearError,\n  clearCompany\n} = companySlice.actions;\nexport default companySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","createCompany","companyData","rejectWithValue","token","localStorage","getItem","response","post","headers","Authorization","data","error","getCompany","_","get","updateCompany","put","getAllCompanies","initialState","company","companies","loading","companySlice","name","reducers","clearError","state","clearCompany","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_action$payload","message","_action$payload2","_action$payload3","_action$payload4","actions","reducer"],"sources":["C:/Users/Administrator/Downloads/capstone-main-main/FE/src/store/slices/companySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Async thunks\r\nexport const createCompany = createAsyncThunk(\r\n  'company/create',\r\n  async (companyData, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(`${API_URL}/company`, companyData, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getCompany = createAsyncThunk(\r\n  'company/get',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${API_URL}/company`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateCompany = createAsyncThunk(\r\n  'company/update',\r\n  async (companyData, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.put(`${API_URL}/company`, companyData, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAllCompanies = createAsyncThunk(\r\n  'company/getAll',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${API_URL}/company/all`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  company: null,\r\n  companies: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst companySlice = createSlice({\r\n  name: 'company',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearCompany: (state) => {\r\n      state.company = null;\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Create Company\r\n      .addCase(createCompany.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createCompany.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.company = action.payload;\r\n      })\r\n      .addCase(createCompany.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'Failed to create company';\r\n      })\r\n      // Get Company\r\n      .addCase(getCompany.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getCompany.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.company = action.payload;\r\n      })\r\n      .addCase(getCompany.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'Failed to get company';\r\n      })\r\n      // Update Company\r\n      .addCase(updateCompany.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateCompany.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.company = action.payload;\r\n      })\r\n      .addCase(updateCompany.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'Failed to update company';\r\n      })\r\n      // Get All Companies\r\n      .addCase(getAllCompanies.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getAllCompanies.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.companies = action.payload;\r\n      })\r\n      .addCase(getAllCompanies.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'Failed to get companies';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, clearCompany } = companySlice.actions;\r\nexport default companySlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}